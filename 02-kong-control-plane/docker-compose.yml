version: "3"
networks:
  default:
    external:
      name: kong-network

services:
  kong-database:
    image: postgres:13.4
    restart: always
    volumes:
      - ./kong/database:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE}
      POSTGRES_USER: ${KONG_PG_USER}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432:5432

  kong-cp-kong-migration:
    image: kong:2.8
    depends_on:
      - kong-database
    command: kong migrations bootstrap
    restart: on-failure
    env_file:
      - .env

  kong-gen-cert:
    image: kong:2.8
    depends_on:
      - kong-database
    restart: always
    command: "kong hybrid gen_cert --v"
    working_dir: /certs
    volumes:
      - ./kong/cert:/certs

  kong-cp:
    image: kong:2.8
    depends_on:
      - kong-database
      - kong-cp-kong-migration
      - kong-gen-cert
    restart: always
    volumes:
      - ./kong/cert:/certs:ro
    env_file:
      - .env
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr

      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_STATUS_LISTEN: 0.0.0.0:9123

      KONG_ROLE: control_plane
      KONG_CLUSTER_CERT: /certs/cluster.crt
      KONG_CLUSTER_CERT_KEY: /certs/cluster.key
    ports:
      - 8001:8001
      - 8444:8444
      - 8005:8005
